name: Auto Build & Release Mod

on:
  push:
    branches:
      - main

permissions:
  contents: write

jobs:
  build-and-release:
    runs-on: ubuntu-24.04

    steps:
      - name: checkout repository
        uses: actions/checkout@v4
      - name: validate gradle wrapper
        uses: gradle/actions/wrapper-validation@v4
      - name: setup jdk
        uses: actions/setup-java@v4
        with:
          java-version: '21'
          distribution: 'microsoft'
      - name: make gradle wrapper executable
        run: chmod +x ./gradlew

      - name: Read version from gradle.properties
        id: get_version
        run: |
          VERSION=$(grep "^mod_version" gradle.properties | cut -d'=' -f2 | tr -d ' ')
          echo "version=$VERSION" >> $GITHUB_ENV

      - name: Check latest GitHub release
        id: check_release
        run: |
          LATEST_VERSION=$(curl -s https://api.github.com/repos/${{ github.repository }}/releases/latest \
            | grep '"tag_name":' | cut -d'"' -f4 | sed 's/^v//')
          echo "Latest release version: $LATEST_VERSION"
          echo "Current mod version: ${{ env.version }}"
          if [ "$LATEST_VERSION" = "${{ env.version }}" ]; then
            echo "skip=true" >> $GITHUB_ENV
          else
            echo "skip=false" >> $GITHUB_ENV
          fi

      - name: Build mod
        if: env.skip == 'false'
        run: ./gradlew build

      - name: Verify built jar exists
        if: env.skip == 'false'
        run: |
          JAR_PATH="build/libs/timeoutfix-${{ env.version }}-release.jar"
          if [ ! -f "$JAR_PATH" ]; then
            echo "❌ File $JAR_PATH not found!"
            exit 1
          fi
          echo "jar_path=$JAR_PATH" >> $GITHUB_ENV

      - name: Create GitHub Release
        if: env.skip == 'false'
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ env.version }}
          name: "TimeoutFix ${{ env.version }}"
          files: ${{ env.jar_path }}
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}